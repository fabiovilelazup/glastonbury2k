version: "3.0"
services:
        
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
      container_name: elasticsearch
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        - ELASTICSEARCH_USERNAME=elastic
        - ELASTICSEARCH_PASSWORD=changeme
        - xpack.security.enabled=false
        - path.data=/usr/share/elasticsearch/data
        - discovery.type=single-node
      networks:
        - order-network
        
    kibana:
      image: docker.elastic.co/kibana/kibana:7.6.1
      container_name: kibana
      links:
        - "elasticsearch"
      ports:
        - "5601:5601"
      networks:
        - order-network

    fluentd:
      build: ./fluentd
      volumes:
        - ./fluentd/conf:/fluentd/etc
      container_name: fluentd
      ports:
        - "24224:24224"
        - "24224:24224/udp"
      links:
        - "elasticsearch"
      networks:
        - order-network

    jaeger:
      image: jaegertracing/all-in-one:1.17.1
      container_name: jaeger
      ports:
        - "5775:5775/udp"
        - "6831:6831/udp"
        - "6832:6832/udp"
        - "16686:16686"
      networks:
        - order-network    

    prometheus:
      image: prom/prometheus:v2.16.0
      container_name: prometheus
      ports:
        - "9090:9090"
      command:
        - "--config.file=/etc/prometheus/prometheus.yml"
      volumes:
        - ./prometheus/conf/prometheus.yml:/etc/prometheus/prometheus.yml
      networks:
        - order-network

    grafana:
      image: grafana/grafana:6.7.1
      container_name: grafana
      ports:
        - "3000:3000"
      networks:
        - order-network
        
    postgres:
      image: postgres:9.6
      hostname: postgres
      domainname: postgres
      container_name: postgres
      ports:
        - "5432:5432"
      environment:
        - POSTGRES_DB=camunda
        - POSTGRES_USER=camunda
        - POSTGRES_PASSWORD=camunda
      networks:
        - order-network

    zookeeper:
      image: zookeeper:3.4.13
      container_name: zookeeper
      ports:
        - "2181:2181"
        - "2888"
      networks:
      - order-network

    kafka:
      image: wurstmeister/kafka:2.12-2.1.0
      container_name: kafka
      ports:
        - "9092:9092"
        - "29092:29092"
      environment:
        KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
        KAFKA_ADVERTISED_PORT: 9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - zookeeper
      networks:
      - order-network

    inventory:
        build: 
          context: ./inventory2k
        image: inventory:latest
        container_name: inventory
        ports:
        - "8081:8081"
        working_dir: /
        command: java -jar inventory.jar
        links:
          - "fluentd"
        networks:
        - order-network
        logging:
          driver: "fluentd"
          options:
            fluentd-address: localhost:24224
            tag: testlogging.log 

    payment:
        build: 
          context: ./payment2k
        image: payment:latest
        container_name: payment
        ports:
        - "8082:8082"
        working_dir: /
        command: java -jar payment.jar
        links:
          - "fluentd"
        networks:
        - order-network
        logging:
          driver: "fluentd"
          options:
            fluentd-address: localhost:24224
            tag: testlogging.log 

    order:
        build: 
          context: ./order2k
        image: order:latest
        container_name: order
        ports:
        - "8080:8080"
        working_dir: /
        command: java -jar order.jar
        links:
          - "fluentd"
        networks:
        - order-network
        logging:
          driver: "fluentd"
          options:
            fluentd-address: localhost:24224
            tag: testlogging.log 

    order-orchestrator:
        build: 
          context: ./order-orchestrator
        image: order-orchestrator:latest
        container_name: order-orchestrator
        ports:
        - "8083:8083"
        working_dir: /
        command: java -jar order-orchestrator.jar
        links:
          - "fluentd"
        networks:
        - order-network
        logging:
          driver: "fluentd"
          options:
            fluentd-address: localhost:24224
            tag: testlogging.log 
        
networks:
    order-network:
         external: true